goods_check = {
	ROOT = {
		set_variable = {
			which = $goods$_price
			which = high_price
		}
	}
	if = {
		limit = {
			REB = {
				check_variable = {
					which = $goods$_price
					which = ROOT
				}
			}
		}
		REB = {
			ROOT = {
				set_variable = {
					which = $goods$_price
					which = PREV
				}
				set_variable = {
					which = high_price
					which = $goods$_price
				}
			}
		}
		save_event_target_as = build_target
	}
}

value_check = {
	export_to_variable = {
		which = tgsVar
		value = modifier:trade_goods_size
	}
	export_to_variable = {
		which = tgsmVar
		value = modifier:trade_goods_size_modifier
	}
	ROOT = {
		set_variable = {
			which = tgsVar
			which = PREV
		}
		set_variable = {
			which = tgsmVar
			which = PREV
		}
		set_variable = {
			tvVar = 1
		}
		change_variable = {
			which = tvVar
			which = tgsmVar
		}
		multiply_variable = {
			which = tvVar
			which = tgsVar
		}
		REB = {
			ROOT = {
				set_variable = {
					which = $goods$_price
					which = PREV
				}
			}
		}
		multiply_variable = {
			which = tvVar
			which = $goods$_price
		}
	}
	if = {
		limit = {
			can_build = counting_house
			NOT = { has_building = workshop }
		}
		ROOT = {
			multiply_variable = {
				tvVar = 2
			}
		}
	}
	if = {
		limit = {
			ROOT = {
				check_variable = {
					which = tvVar
					which = high_price
				}
			}
		}
		ROOT = {
			set_variable = {
				which = high_price
				which = tvVar
			}
		}
		save_event_target_as = build_target
	}
}

update_mod = { #mod #var #scope
    if = {
        limit = {
            OR = {
                check_variable = { which = $var$ value = 0.01 }
                has_$scope$_modifier = $mod$_disp
            }
        }
        if = {
            limit = {
                check_variable = { which = $var$ value = 0.01 }
            }
            set_variable = { which = $mod$_disp which = $var$ }
            add_$scope$_modifier = {
                name = $mod$_disp
                duration = -1
            }
        }
        else = {
            remove_$scope$_modifier = $mod$_disp
            set_variable = { which = $mod$_disp value = 0 }
        }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=2.56 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=1.28 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=0.64 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=0.32 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=0.16 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=0.08 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=0.04 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=0.02 }
        update_mod_helper = { mod=$mod$ var=$var$ scope=$scope$ num=0.01 }
    }
}

update_mod_helper = {
    if = {
        limit = {
            check_variable = { which = $var$ value = $num$ }
        }
        subtract_variable = { which = $var$ value = $num$ }
        add_$scope$_modifier = {
            name = $mod$_$num$
            duration = -1
            hidden = yes
        }
    }
    else = {
        remove_$scope$_modifier = $mod$_$num$
    }
}

update_forcelimit_mod = {
	export_to_variable = { which = forcelimit_variable value = development }
	multiply_variable = { which = forcelimit_variable value = 0.1 }
	if = {
		limit = {
			has_building = regimental_camp
		}
		multiply_variable = { which = forcelimit_variable value = 0.5 }
	}
	else_if = {
		limit = {
			NOT = { has_building = conscription_center }
		}
		multiply_variable = { which = forcelimit_variable value = 0 }
	}
	if = {
		limit = {
			OR = {
				has_province_modifier = forcelimit_mod_disp1
				has_province_modifier = forcelimit_mod_disp2
			}
		}
		remove_province_modifier = forcelimit_mod_disp1
		remove_province_modifier = forcelimit_mod_disp2
		add_province_modifier = {
			name = forcelimit_mod_disp
			duration = -1
		}
	}
	
	update_mod = { mod=forcelimit_mod var=forcelimit_variable scope=province }
	
	if = {
		limit = {
			has_province_modifier = forcelimit_mod_disp
		}
		if = {
			limit = {
				has_building = regimental_camp
			}
			remove_province_modifier = forcelimit_mod_disp
			add_province_modifier = {
                name = forcelimit_mod_disp1
                duration = -1
            }
		}
		else_if = {
			limit = {
				has_building = conscription_center
			}
			remove_province_modifier = forcelimit_mod_disp
			add_province_modifier = {
                name = forcelimit_mod_disp2
                duration = -1
            }
		}
	}
}

