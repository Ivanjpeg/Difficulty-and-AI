namespace = build_events

country_event = {
	# build/upgrade
	id = build_events.1
	title = build_events.1.t
	desc = build_events.1.d
	picture = INVENTION_eventPicture
	hidden = yes

	trigger = {
		ai = yes
		primitives = no
		#always = no
		NOT = { has_global_flag = build_event_disabled_flag }

		NOT = { num_of_loans = 1 }
		treasury = 2500
		is_in_deficit = no
		
		OR = {
			is_at_war = no
			treasury = 5000
		}
		
		any_owned_province = {
			is_state_core = ROOT
			OR = {
				AND = { #manufactory
					NOT = { has_latent_trade_goods = coal }
					OR = {
						AND = {
							can_build = wharf
							NOT = { trade_goods = fish }
						}
						can_build = weapons
						can_build = textile
						can_build = plantations
						can_build = tradecompany
						AND = {
							can_build = farm_estate
							trade_goods = wine
						}
						AND = {
							can_build = soldier_households
							OR = {
								trade_goods = grain
								trade_goods = fish
								trade_goods = livestock
								#trade_goods = wine
							}
						}
						can_build = mills
						can_build = furnace
					}
				}
				AND = { #workshop
					has_local_modifier_value = {
						which = trade_goods_size
						value = 0.5
					}
					OR = {
						can_build = workshop
						can_build = counting_house
					}
				}
				AND = { #barracks
					OR = {
						base_manpower = 6
						has_building = soldier_households
					}
					OR = {
						can_build = barracks
						can_build = training_fields
					}
				}
				AND = { #production
					has_building = workshop
					can_build = counting_house
				}
				AND = { #trade
					OR = {
						has_building = marketplace
						has_building = trade_depot
					}
					OR = {
						can_build = trade_depot
						can_build = stock_exchange
					}
				}
				AND = { #barracks
					has_building = barracks
					can_build = training_fields
				}
				AND = { #regimental_camp
					has_building = regimental_camp
					can_build = conscription_center
				}
				AND = { #government
					has_building = courthouse
					can_build = town_hall
					ROOT = { governing_capacity_percentage = 0.95 }
				}
				AND = { #shipyard
					has_building = shipyard
					can_build = grand_shipyard
				}
				AND = { #taxation
					has_building = temple
					can_build = cathedral
				}
				can_build = university
			}
		}
	}

	immediate = {
		log = "[Root.GetName] building"
		set_variable = { high_price = 0 }
		
		every_owned_province = {
			limit = {
				is_state_core = ROOT
				NOT = { has_latent_trade_goods = coal }
				OR = {
					AND = {
						can_build = wharf
						NOT = { trade_goods = fish }
					}
					can_build = weapons
					can_build = textile
					can_build = plantations
					can_build = tradecompany
					AND = {
						can_build = farm_estate
						trade_goods = wine
					}
					AND = {
						can_build = soldier_households
						OR = {
							trade_goods = grain
							trade_goods = fish
							trade_goods = livestock
							#trade_goods = wine
						}
					}
					can_build = mills
					can_build = furnace
				}
			}
			trigger_switch = {
				on_trigger = trade_goods
				coal = { goods_check = { goods = coal } }
				cloves = { goods_check = { goods = cloves } }
				cocoa = { goods_check = { goods = cocoa } }
				dyes = { goods_check = { goods = dyes } }
				gems = { goods_check = { goods = gems } }
				ivory = { goods_check = { goods = ivory } }
				silk = { goods_check = { goods = silk } }
				paper = { goods_check = { goods = paper } }
				chinaware = { goods_check = { goods = chinaware } }
				cloth = { goods_check = { goods = cloth } }
				coffee = { goods_check = { goods = coffee } }
				copper = { goods_check = { goods = copper } }
				cotton = { goods_check = { goods = cotton } }
				glass = { goods_check = { goods = glass } }
				iron = { goods_check = { goods = iron } }
				salt = { goods_check = { goods = salt } }
				spices = { goods_check = { goods = spices } }
				sugar = { goods_check = { goods = sugar } }
				tobacco = { goods_check = { goods = tobacco } }
				fish = { goods_check = { goods = fish } }
				grain = { goods_check = { goods = grain } }
				incense = { goods_check = { goods = incense } }
				wine = { goods_check = { goods = wine } }
				wool = { goods_check = { goods = wool } }
				fur = { goods_check = { goods = fur } }
				livestock = { goods_check = { goods = livestock } }
				naval_supplies = { goods_check = { goods = naval_supplies } }
				slaves = { goods_check = { goods = slaves } }
				tea = { goods_check = { goods = tea } }
				tropical_wood = { goods_check = { goods = tropical_wood } }
				#gold = { goods_check = { goods = gold } }
				#unknown = { goods_check = { goods = unknown } }
			}
		}
		if = {
			limit = { has_saved_event_target = build_target }
			event_target:build_target = {
				if = {
					limit = {
						can_build = wharf
						NOT = { trade_goods = fish }
					}
					add_building_construction = { building = wharf }
				}
				else_if = {
					limit = { can_build = weapons }
					add_building_construction = { building = weapons }
				}
				else_if = {
					limit = { can_build = textile }
					add_building_construction = { building = textile }
				}
				else_if = {
					limit = { can_build = plantations }
					add_building_construction = { building = plantations }
				}
				else_if = {
					limit = { can_build = tradecompany }
					add_building_construction = { building = tradecompany }
				}
				else_if = {
					limit = {
						can_build = farm_estate
						trade_goods = wine
					}
					add_building_construction = { building = farm_estate }
				}
				else_if = {
					limit = {
						#can_build = farm_estate
						can_build = soldier_households
						OR = {
							trade_goods = grain
							trade_goods = fish
							trade_goods = livestock
							#trade_goods = wine
						}
					}
					add_building_construction = { building = soldier_households }
				}
				else_if = {
					limit = { can_build = mills }
					add_building_construction = { building = mills }
				}
				else_if = {
					limit = { can_build = furnace }
					add_building_construction = { building = furnace }
				}
				log = "[This.GetName] build manufactory"
			}
		}
		else = {
			set_variable = { high_price = 0 }
			
			every_owned_province = {
				limit = {
					is_state_core = ROOT
					has_local_modifier_value = {
						which = trade_goods_size
						value = 0.5
					}
					OR = {
						can_build = workshop
						can_build = counting_house
					}
				}
				trigger_switch = {
					on_trigger = trade_goods
					coal = { value_check = { goods = coal } }
					cloves = { value_check = { goods = cloves } }
					cocoa = { value_check = { goods = cocoa } }
					dyes = { value_check = { goods = dyes } }
					gems = { value_check = { goods = gems } }
					ivory = { value_check = { goods = ivory } }
					silk = { value_check = { goods = silk } }
					paper = { value_check = { goods = paper } }
					chinaware = { value_check = { goods = chinaware } }
					cloth = { value_check = { goods = cloth } }
					coffee = { value_check = { goods = coffee } }
					copper = { value_check = { goods = copper } }
					cotton = { value_check = { goods = cotton } }
					glass = { value_check = { goods = glass } }
					iron = { value_check = { goods = iron } }
					salt = { value_check = { goods = salt } }
					spices = { value_check = { goods = spices } }
					sugar = { value_check = { goods = sugar } }
					tobacco = { value_check = { goods = tobacco } }
					fish = { value_check = { goods = fish } }
					grain = { value_check = { goods = grain } }
					incense = { value_check = { goods = incense } }
					wine = { value_check = { goods = wine } }
					wool = { value_check = { goods = wool } }
					fur = { value_check = { goods = fur } }
					livestock = { value_check = { goods = livestock } }
					naval_supplies = { value_check = { goods = naval_supplies } }
					slaves = { value_check = { goods = slaves } }
					tea = { value_check = { goods = tea } }
					tropical_wood = { value_check = { goods = tropical_wood } }
					#gold = { value_check = { goods = gold } }
					#unknown = { value_check = { goods = unknown } }
				}
			}
			if = {
				limit = { has_saved_event_target = build_target }
				event_target:build_target = {
					if = {
						limit = { can_build = counting_house }
						add_building_construction = { building = counting_house }
						log = "[This.GetName] build counting_house"
					}
					else_if = {
						limit = { can_build = workshop }
						add_building_construction = { building = workshop }
						log = "[This.GetName] build workshop"
					}
				}
			}
			else = {
				set_variable = { high_price = 0 }
				
				every_owned_province = {
					limit = {
						is_state_core = ROOT
						OR = {
							base_manpower = 6
							has_building = soldier_households
						}
						OR = {
							can_build = barracks
							can_build = training_fields
						}
					}
					export_to_variable = {
						which = lmVar
						value = modifier:local_manpower
					}
					export_to_variable = {
						which = bmVar
						value = base_manpower
					}
					ROOT = {
						set_variable = {
							which = lmVar
							which = PREV
						}
						set_variable = {
							which = bmVar
							which = PREV
						}
						multiply_variable = {
							bmVar = 0.25
						}
						change_variable = {
							which = lmVar
							which = bmVar
						}
					}
					if = {
						limit = {
							can_build = training_fields
							NOT = { has_building = barracks }
						}
						ROOT = {
							multiply_variable = {
								lmVar = 2
							}
						}
					}
					if = {
						limit = {
							ROOT = {
								check_variable = {
									which = lmVar
									which = high_price
								}
							}
						}
						ROOT = {
							set_variable = {
								which = high_price
								which = lmVar
							}
						}
						save_event_target_as = build_target
					}
				}
				if = {
					limit = { has_saved_event_target = build_target }
					event_target:build_target = {
						if = {
							limit = { can_build = training_fields }
							add_building_construction = { building = training_fields }
							log = "[This.GetName] build training_fields"
						}
						else = {
							add_building_construction = { building = barracks }
							log = "[This.GetName] build barracks"
						}
					}
				}
				else = {
					if = { #production
						limit = {
							any_owned_province = {
								is_state_core = ROOT
								has_building = workshop
								can_build = counting_house
							}
						}
						random_owned_province = {
							limit = {
								is_state_core = ROOT
								has_building = workshop
								can_build = counting_house
							}
							add_building_construction = { building = counting_house }
							log = "[This.GetName] upgrade counting_house"
						}
					}
					else_if = { #trade
						limit = {
							any_owned_province = {
								is_state_core = ROOT
								OR = {
									has_building = marketplace
									has_building = trade_depot
								}
								OR = {
									can_build = trade_depot
									can_build = stock_exchange
								}
							}
						}
						random_owned_province = {
							limit = {
								is_state_core = ROOT
								OR = {
									has_building = marketplace
									has_building = trade_depot
								}
								OR = {
									can_build = trade_depot
									can_build = stock_exchange
								}
							}
							if = {
								limit = { can_build = stock_exchange }
								add_building_construction = { building = stock_exchange }
								log = "[This.GetName] upgrade stock_exchange"
							}
							else = {
								add_building_construction = { building = trade_depot }
								log = "[This.GetName] upgrade trade_depot"
							}
						}
					}
					else_if = { #barracks
						limit = {
							any_owned_province = {
								is_state_core = ROOT
								has_building = barracks
								can_build = training_fields
							}
						}
						random_owned_province = {
							limit = {
								is_state_core = ROOT
								has_building = barracks
								can_build = training_fields
							}
							add_building_construction = { building = training_fields }
							log = "[This.GetName] upgrade training_fields"
						}
					}
					else_if = { #regimental_camp
						limit = {
							any_owned_province = {
								is_state_core = ROOT
								has_building = regimental_camp
								can_build = conscription_center
							}
						}
						random_owned_province = {
							limit = {
								is_state_core = ROOT
								has_building = regimental_camp
								can_build = conscription_center
							}
							add_building_construction = { building = conscription_center }
							log = "[This.GetName] upgrade conscription_center"
						}
					}
					else_if = { #government
						limit = {
							governing_capacity_percentage = 0.95
							any_owned_province = {
								is_state_core = ROOT
								has_building = courthouse
								can_build = town_hall
							}
						}
						random_owned_province = {
							limit = {
								is_state_core = ROOT
								has_building = courthouse
								can_build = town_hall
							}
							add_building_construction = { building = town_hall }
							log = "[This.GetName] upgrade town_hall"
						}
					}
					else_if = { #shipyard
						limit = {
							any_owned_province = {
								is_state_core = ROOT
								has_building = shipyard
								can_build = grand_shipyard
							}
						}
						random_owned_province = {
							limit = {
								is_state_core = ROOT
								has_building = shipyard
								can_build = grand_shipyard
							}
							add_building_construction = { building = grand_shipyard }
							log = "[This.GetName] upgrade grand_shipyard"
						}
					}
					else_if = { #taxation
						limit = {
							any_owned_province = {
								is_state_core = ROOT
								has_building = temple
								can_build = cathedral
							}
						}
						random_owned_province = {
							limit = {
								is_state_core = ROOT
								has_building = temple
								can_build = cathedral
							}
							add_building_construction = { building = cathedral }
							log = "[This.GetName] upgrade cathedral"
						}
					}
					else = { #university
						set_variable = { high_price = 0 }
						
						every_owned_province = {
							limit = {
								is_state_core = ROOT
								can_build = university
							}
							export_to_variable = {
								which = pDev
								value = development
							}
							ROOT = {
								set_variable = {
									which = pDev
									which = PREV
								}
							}
							if = {
								limit = {
									ROOT = {
										NOT = {
											check_variable = {
												which = high_price
												which = pDev
											}
										}
									}
								}
								ROOT = {
									set_variable = {
										which = high_price
										which = pDev
									}
								}
								save_event_target_as = build_target
							}
						}
						
						event_target:build_target = {
							add_building_construction = { building = university }
							log = "[This.GetName] build university"
						}
					}
				}
			}
		}
	}
	
	option = {
		#hidden
	}
}

country_event = {
	# set prices
	id = build_events.2
	title = build_events.2.t
	desc = build_events.2.d
	picture = INVENTION_eventPicture
	fire_only_once = yes
	hidden = yes

	trigger = {
		always = yes
	}

	immediate = {
		log = "set prices"
		REB = {
			set_variable = { coal_price = 10 }
			set_variable = { cloves_price = 8 }
			set_variable = { cocoa_price = 4 }
			set_variable = { dyes_price = 4 }
			set_variable = { gems_price = 4 }
			set_variable = { ivory_price = 4 }
			set_variable = { silk_price = 4 }
			set_variable = { paper_price = 3.5 }
			set_variable = { chinaware_price = 3 }
			set_variable = { cloth_price = 3 }
			set_variable = { coffee_price = 3 }
			set_variable = { copper_price = 3 }
			set_variable = { cotton_price = 3 }
			set_variable = { glass_price = 3 }
			set_variable = { iron_price = 3 }
			set_variable = { salt_price = 3 }
			set_variable = { spices_price = 3 }
			set_variable = { sugar_price = 3 }
			set_variable = { tobacco_price = 3 }
			set_variable = { fish_price = 2.5 }
			set_variable = { grain_price = 2.5 }
			set_variable = { incense_price = 2.5 }
			set_variable = { wine_price = 2.5 }
			set_variable = { wool_price = 2.5 }
			set_variable = { fur_price = 2 }
			set_variable = { livestock_price = 2 }
			set_variable = { naval_supplies_price = 2 }
			set_variable = { slaves_price = 2 }
			set_variable = { tea_price = 2 }
			set_variable = { tropical_wood_price = 2 }
			set_variable = { gold_price = 0 }
			set_variable = { unknown_price = 0 }
		}
	}
	
	option = {
		#hidden
	}
}

country_event = {
	# delete temples
	id = build_events.3
	title = build_events.3.t
	desc = build_events.3.d
	picture = INVENTION_eventPicture
	hidden = yes

	trigger = {
		ai = yes
		primitives = no
		#always = no
		is_at_war = no
		NOT = { num_of_loans = 1 }
		treasury = 1000
		is_in_deficit = no
		
		any_owned_province = {
			is_state_core = ROOT
			OR = {
				has_building = temple
				has_building = cathedral
			}
			NOT = { num_free_building_slots = 1 }
			NOT = { base_tax = 5 }
			NOT = { trade_goods = gold }
		}	
	}
	immediate = {
		every_owned_province = {
			limit = {
				OR = {
					has_building = temple
					has_building = cathedral
				}
				NOT = { num_free_building_slots = 1 }
				NOT = { base_tax = 5 }
			}
			save_event_target_as = delete_temple
		}	
		event_target:delete_temple = {
			if = {
				limit = { has_building = temple }
				remove_building = temple
				log = "[This.GetName] delete temple"
			}
			else_if = {
				limit = { has_building = cathedral }
				remove_building = cathedral
				log = "[This.GetName] delete cathedral"
			}
		}
	}
	option = {
	}
}

country_event = {
	# delete farmestates 
	id = build_events.4
	title = build_events.4.t
	desc = build_events.4.d
	picture = INVENTION_eventPicture
	hidden = yes

	trigger = {
		ai = yes
		primitives = no
		#always = no
		is_at_war = no
		NOT = { num_of_loans = 1 }
		treasury = 2000
		is_in_deficit = no
		adm_tech = 16
		farm_estate_privilege_trigger = no
		OR = {
			is_great_power = yes
			has_idea_group = quantity_ideas
		}
		any_owned_province = {
			NOT = { can_build = soldier_households }
			NOT = { has_building = soldier_households }
			has_building = farm_estate
			OR = {
				trade_goods = grain
				trade_goods = livestock
			}
		}
	}
	immediate = {
		random_owned_province = {
			limit = {
				NOT = { can_build = soldier_households }
				NOT = { has_building = soldier_households }
				has_building = farm_estate
				OR = {
					trade_goods = grain
					trade_goods = livestock
				}
			}
			remove_building = farm_estate
			log = "[This.GetName] delete farm estate"
		}	
	}
	option = {
	}
}

country_event = {
	# expand infrastructure
	id = build_events.5
	title = build_events.5.t
	desc = build_events.5.d
	picture = INVENTION_eventPicture
	hidden = yes

	trigger = {
		#always = no
		ai = yes
		primitives = no
		is_at_war = no
		adm_power = 600
		NOT = { governing_capacity_percentage = 1 }
		num_of_cities = 3
		
		any_owned_province = {
			is_state_core = ROOT
			OR = {
				province_has_center_of_trade_of_level = 3
				area_for_scope_province = {
					is_capital_of = ROOT
				}
			}
			OR = {
				AND = {
					development = 15
					NOT = { has_province_modifier = infrastructure_15 }
					NOT = { has_province_modifier = infrastructure_30 }
					NOT = { has_province_modifier = infrastructure_45 }
				}
				AND = {
					development = 30
					NOT = { has_province_modifier = infrastructure_30 }
					NOT = { has_province_modifier = infrastructure_45 }
				}
				AND = {
					development = 45
					NOT = { has_province_modifier = infrastructure_45 }
				}
			}
		}
	}
	
	immediate = {
		add_adm_power = -50
		random_owned_province = {
			limit = {
				is_state_core = ROOT
				OR = {
					province_has_center_of_trade_of_level = 3
					area_for_scope_province = {
						is_capital_of = ROOT
					}
				}
				OR = {
					AND = {
						development = 15
						NOT = { has_province_modifier = infrastructure_15 }
						NOT = { has_province_modifier = infrastructure_30 }
						NOT = { has_province_modifier = infrastructure_45 }
					}
					AND = {
						development = 30
						NOT = { has_province_modifier = infrastructure_30 }
						NOT = { has_province_modifier = infrastructure_45 }
					}
					AND = {
						development = 45
						NOT = { has_province_modifier = infrastructure_45 }
					}
				}
			}
			PREV = {
				export_to_variable = {
					which = var_governing_capacity
					value = modifier:governing_capacity
				}
				export_to_variable = {
					which = var_governing_capacity_percentage 
					value = trigger_value:governing_capacity_percentage 
				}
				set_variable = {
					which = var_remaining_capacity
					value = 1
				}
				subtract_variable = {
					which = var_remaining_capacity
					which = var_governing_capacity_percentage
				}
				multiply_variable = {
					which = var_remaining_capacity
					which = var_governing_capacity
				}
				log = "on_expanded_infrastructure	[This.GetName]	[Prev.GetName]	[This.var_remaining_capacity.GetValue]"
			}
			if = {
				limit = {
					NOT = { has_province_modifier = infrastructure_15 }
					NOT = { has_province_modifier = infrastructure_30 }
				}
				add_province_modifier = {
					name = infrastructure_15
					duration = -1
				}
			}
			else_if = {
				limit = {
					NOT = { has_province_modifier = infrastructure_30 }
				}
				add_province_modifier = {
					name = infrastructure_30
					duration = -1
				}
				remove_province_modifier = infrastructure_15
			}
			else = {
				add_province_modifier = {
					name = infrastructure_45
					duration = -1
				}
				remove_province_modifier = infrastructure_30
			}
		}
	}
	option = {
	}
}
